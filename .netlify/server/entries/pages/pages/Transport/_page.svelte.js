import { c as create_ssr_component, v as validate_component, d as each, e as escape } from "../../../../chunks/ssr.js";
import "../../../../chunks/firebase.js";
import { N as Nav } from "../../../../chunks/Nav.js";
import "../../../../chunks/i18n.js";
const css = {
  code: ".loader.svelte-sg8bjj{animation:svelte-sg8bjj-spin 1s linear infinite;border:4px solid rgba(0,0,0,.1);border-radius:50%;border-top-color:#3498db;height:40px;margin:0 auto;width:40px}@keyframes svelte-sg8bjj-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n    import { onMount } from 'svelte';\\n    import { fetchProducts } from '$lib/actions/firebase.js';\\n    import Button from '$lib/component/landing/components/Button.svelte';\\n    import { t } from '$lib/i18n';\\n    import Nav from '$lib/component/landing/Nav.svelte';\\n\\n    let products = [];\\n    let cart = [];\\n    let isLoading = true;\\n\\n    // Fetch products from Firebase on component mount\\n    onMount(() => {\\n        fetchProducts((fetchedProducts) => {\\n            products = fetchedProducts;\\n            isLoading = false; // Stop loading when data is fetched\\n            console.log('Fetched products:', products);\\n        });\\n    });\\n\\n    // Function to add a product to the cart\\n    function addToCart(product) {\\n        cart = [...cart, product]; // Adds the selected product to the cart array\\n        console.log('Cart:', cart); // Debug log to check if the product is added\\n    }\\n<\/script>\\n\\n<div class=\\"container mx-auto py-10 bg-gradient-to-r from-indigo-500 to-blue-500 relative\\">\\n    <Nav/>\\n    <br/>\\n    <br/>\\n    <br/>\\n    <br/>\\n    <h1 class=\\"text-3xl font-bold text-center mb-5 text-white\\">Orders List</h1>\\n\\n    {#if isLoading}\\n        <div class=\\"text-center py-20\\">\\n            <div class=\\"loader\\">Loading...</div>\\n        </div>\\n    {:else}\\n        <div class=\\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\\">\\n            {#if products.length}\\n                {#each products as product}\\n                    <div class=\\"bg-white shadow-md rounded-lg overflow-hidden\\">\\n                        <img src={product.imageUrl || 'placeholder-image-url.jpg'} alt={product.name} class=\\"w-full h-40 object-cover\\">\\n                        <div class=\\"p-4\\">\\n                            <h2 class=\\"text-lg font-semibold\\">{product.name}</h2>\\n                            <p class=\\"text-gray-500\\">Price: ₹{product.price}</p>\\n                            <p class=\\"text-gray-500\\">{product.kg} Kg</p>\\n                            <p class=\\"text-gray-400 text-sm\\">ID: {product.id}</p>\\n                            <p class=\\"text-gray-400 text-sm\\">Date: {product.date}</p>\\n                            <div class=\\"text-gray-400 text-sm\\">\\n                                Rating: \\n                                <span class=\\"star-rating\\">\\n                                    <!-- Rating Stars -->\\n                                    {#each Array(5) as _, i}\\n                                        <i class={\\n                                            i + 1 <= product.rating ? 'fas fa-star text-yellow-500' : \\n                                            (i + 0.5 < product.rating ? 'fas fa-star-half-alt text-yellow-500' : \\n                                            'far fa-star text-yellow-500')\\n                                        }></i>\\n                                    {/each}\\n                                </span> {product.rating}\\n                            </div>\\n                            <button on:click={() => addToCart(product)}><Button blue>Take Order</Button></button>\\n                        </div>\\n                    </div>\\n                {/each}\\n            {:else}\\n                <p class=\\"text-center text-gray-500\\">No Orders available.</p>\\n            {/if}\\n        </div>\\n    {/if}\\n\\n    <!-- Cart Element -->\\n    <div class=\\"fixed top-[120px] right-1 bg-white shadow-lg rounded-lg  sm:px-[20px] outline outline-2\\">\\n        <h2 class=\\"lg:text-xl font-bold \\">My orders</h2>\\n        {#if cart.length > 0}\\n            <ul>\\n                {#each cart as item}\\n                    <li class=\\"border-b py-2\\">\\n                        <p class=\\"font-semibold\\">{item.name}</p>\\n                        <p class=\\"text-sm text-gray-500\\">Price: ₹{item.price}</p>\\n                        <p class=\\"text-sm text-gray-500\\">{item.kg} Kg</p>\\n                    </li>\\n                {/each}\\n            </ul>\\n        {:else}\\n            <p class=\\"text-gray-500\\">Your orders are empty.</p>\\n        {/if}\\n    </div>\\n</div>\\n\\n<style>.loader{animation:spin 1s linear infinite;border:4px solid rgba(0,0,0,.1);border-radius:50%;border-top-color:#3498db;height:40px;margin:0 auto;width:40px}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}</style>\\n"],"names":[],"mappings":"AA6FO,qBAAO,CAAC,UAAU,kBAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,cAAc,GAAG,CAAC,iBAAiB,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,kBAAI,CAAC,EAAE,CAAC,UAAU,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,OAAO,KAAK,CAAC,CAAC"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let cart = [];
  $$result.css.add(css);
  return `<div class="container mx-auto py-10 bg-gradient-to-r from-indigo-500 to-blue-500 relative">${validate_component(Nav, "Nav").$$render($$result, {}, {}, {})} <br> <br> <br> <br> <h1 class="text-3xl font-bold text-center mb-5 text-white" data-svelte-h="svelte-pczg6t">Orders List</h1> ${`<div class="text-center py-20" data-svelte-h="svelte-aoxmif"><div class="loader svelte-sg8bjj">Loading...</div></div>`}  <div class="fixed top-[120px] right-1 bg-white shadow-lg rounded-lg sm:px-[20px] outline outline-2"><h2 class="lg:text-xl font-bold " data-svelte-h="svelte-1yxed8e">My orders</h2> ${cart.length > 0 ? `<ul>${each(cart, (item) => {
    return `<li class="border-b py-2"><p class="font-semibold">${escape(item.name)}</p> <p class="text-sm text-gray-500">Price: ₹${escape(item.price)}</p> <p class="text-sm text-gray-500">${escape(item.kg)} Kg</p> </li>`;
  })}</ul>` : `<p class="text-gray-500" data-svelte-h="svelte-s4fhu5">Your orders are empty.</p>`}</div> </div>`;
});
export {
  Page as default
};
