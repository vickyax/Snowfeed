import { c as create_ssr_component, a as subscribe, v as validate_component, e as escape, b as add_attribute } from "../../../../chunks/ssr.js";
import { N as Nav } from "../../../../chunks/Nav.js";
import "../../../../chunks/firebase.js";
import "../../../../chunks/client.js";
import { t } from "../../../../chunks/i18n.js";
const css = {
  code: "input.svelte-1xwn7tk{display:block;margin-bottom:10px}",
  map: `{"version":3,"file":"+layout.svelte","sources":["+layout.svelte"],"sourcesContent":["<script>\\r\\n\\timport Nav from '$lib/component/landing/Nav.svelte';\\r\\n    import { addProduct, uploadImage } from '$lib/actions/firebase.js';\\r\\n    import { goto } from '$app/navigation';\\r\\n    import {t} from '$lib/i18n';\\r\\n    // Reactive variables\\r\\n    let name = '';\\r\\n    let id = '';\\r\\n    let price = '';\\r\\n    let kg='';\\r\\n    let date = '';\\r\\n    let imageFile; // Store the selected file\\r\\n    let successMessage = ''; // Message to show if the product is added successfully\\r\\n    let errorMessage = ''; // Message to show if there is an error\\r\\n    let isLoading = false; // Loading state\\r\\n\\r\\n    // Function to handle adding a new product\\r\\n    async function handleAddProduct() {\\r\\n        successMessage = '';\\r\\n        errorMessage = '';\\r\\n        isLoading = true;\\r\\n        \\r\\n        if (imageFile) {\\r\\n            try {\\r\\n                const imageUrl = await uploadImage(imageFile); // Upload image and get the URL\\r\\n                const product = {\\r\\n                    name,\\r\\n                    id,\\r\\n                    kg,\\r\\n                    price,\\r\\n                    date,\\r\\n                    imageUrl // Include image URL\\r\\n                };\\r\\n                await addProduct(product);\\r\\n                successMessage = 'Product added successfully!';\\r\\n                // Clear input fields after adding the product\\r\\n                name = '';\\r\\n                id = '';\\r\\n                price = '';\\r\\n                kg='';\\r\\n                date = '';\\r\\n                imageFile = null;\\r\\n            } catch (error) {\\r\\n                console.error(\\"Error adding product:\\", error);\\r\\n                errorMessage = 'Error adding product. Please try again.';\\r\\n            } finally {\\r\\n                isLoading = false;\\r\\n            }\\r\\n        } else {\\r\\n            console.error(\\"Please select an image.\\");\\r\\n            errorMessage = 'Please select an image.';\\r\\n            isLoading = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Handle file input change\\r\\n    function handleFileChange(event) {\\r\\n        imageFile = event.target.files[0];\\r\\n    }\\r\\n<\/script>\\r\\n\\r\\n<main class=\\"container mx-auto py-10 bg-gradient-to-r from-indigo-500 to-blue-500\\">\\r\\n    <div\\r\\n\\tclass=\\"leading-normal tracking-normal text-white gradient\\"\\r\\n\\tstyle=\\"font-family: 'Source Sans Pro', sans-serif;\\">\\r\\n<Nav/>\\r\\n</div>\\r\\n<button type=\\"button\\" class=\\"text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 \\r\\nfont-medium rounded-lg text-sm px-5 py-2.5 text-center relative top-[100px] left-5\\"\\r\\non:click={() => goto('/pages/Stock')}>{$t(\\"stk\\")}</button>\\r\\n<br/>\\r\\n<br/>\\r\\n<br/>\\r\\n    <h1 class=\\"text-3xl font-bold text-center mb-5 text-white\\">{$t(\\"ads\\")}</h1>\\r\\n    <div class=\\"max-w-md mx-auto bg-white p-6 rounded-lg shadow-md\\">\\r\\n        <input bind:value={name} placeholder=\\"{$t(\\"it\\")}\\" class=\\"border p-2 mb-4 block w-full rounded\\" />\\r\\n        <input bind:value={id} placeholder={$t(\\"iti\\")} class=\\"border p-2 mb-4 block w-full rounded\\" />\\r\\n        <input bind:value={price} placeholder={$t(\\"price\\")} class=\\"border p-2 mb-4 block w-full rounded\\" />\\r\\n        <input bind:value={kg} placeholder=\\"kg\\" class=\\"border p-2 mb-4 block w-full rounded\\" />\\r\\n        <input type=\\"date\\" bind:value={date} class=\\"border p-2 mb-4 block w-full rounded\\" />\\r\\n        <input type=\\"file\\" on:change={handleFileChange} class=\\"border p-2 mb-4 block w-full rounded\\" /> <!-- File input for image upload -->\\r\\n        \\r\\n        <button on:click={handleAddProduct} class=\\"bg-blue-500 text-white p-2 rounded w-full hover:bg-blue-600\\" disabled={isLoading}>\\r\\n            {#if isLoading}\\r\\n                Adding Product...\\r\\n            {:else}\\r\\n                {$t(\\"ad\\")}\\r\\n            {/if}\\r\\n        </button>\\r\\n\\r\\n        <!-- Success and error messages -->\\r\\n        {#if successMessage}\\r\\n            <p class=\\"text-green-500 mt-4 text-center\\">{successMessage}</p>\\r\\n        {/if}\\r\\n        {#if errorMessage}\\r\\n            <p class=\\"text-red-500 mt-4 text-center\\">{errorMessage}</p>\\r\\n        {/if}\\r\\n    </div>\\r\\n    <slot/>\\r\\n</main>\\r\\n\\r\\n<style>input{display:block;margin-bottom:10px}</style>\\r\\n"],"names":[],"mappings":"AAqGO,oBAAK,CAAC,QAAQ,KAAK,CAAC,cAAc,IAAI"}`
};
const Layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $t, $$unsubscribe_t;
  $$unsubscribe_t = subscribe(t, (value) => $t = value);
  let name = "";
  let id = "";
  let price = "";
  let kg = "";
  let date = "";
  $$result.css.add(css);
  $$unsubscribe_t();
  return `<main class="container mx-auto py-10 bg-gradient-to-r from-indigo-500 to-blue-500"><div class="leading-normal tracking-normal text-white gradient" style="font-family: 'Source Sans Pro', sans-serif;">${validate_component(Nav, "Nav").$$render($$result, {}, {}, {})}</div> <button type="button" class="text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center relative top-[100px] left-5">${escape($t("stk"))}</button> <br> <br> <br> <h1 class="text-3xl font-bold text-center mb-5 text-white">${escape($t("ads"))}</h1> <div class="max-w-md mx-auto bg-white p-6 rounded-lg shadow-md"><input${add_attribute("placeholder", $t("it"), 0)} class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk"${add_attribute("value", name, 0)}> <input${add_attribute("placeholder", $t("iti"), 0)} class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk"${add_attribute("value", id, 0)}> <input${add_attribute("placeholder", $t("price"), 0)} class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk"${add_attribute("value", price, 0)}> <input placeholder="kg" class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk"${add_attribute("value", kg, 0)}> <input type="date" class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk"${add_attribute("value", date, 0)}> <input type="file" class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk">  <button class="bg-blue-500 text-white p-2 rounded w-full hover:bg-blue-600" ${""}>${`${escape($t("ad"))}`}</button>  ${``} ${``}</div> ${slots.default ? slots.default({}) : ``} </main>`;
});
export {
  Layout as default
};
