import { c as create_ssr_component, a as subscribe, v as validate_component, e as escape, b as add_attribute } from "../../../../chunks/ssr.js";
import { N as Nav } from "../../../../chunks/Nav.js";
import "../../../../chunks/firebase.js";
import "../../../../chunks/client.js";
import { t } from "../../../../chunks/i18n.js";
const css = {
  code: "input.svelte-1xwn7tk{display:block;margin-bottom:10px}",
  map: `{"version":3,"file":"+layout.svelte","sources":["+layout.svelte"],"sourcesContent":["<script>\\n\\timport Nav from '$lib/component/landing/Nav.svelte';\\n    import { addProduct, uploadImage } from '$lib/actions/firebase.js';\\n    import { goto } from '$app/navigation';\\n    import {t} from '$lib/i18n';\\n    // Reactive variables\\n    let name = '';\\n    let id = '';\\n    let price = '';\\n    let kg='';\\n    let date = '';\\n    let rating = '';\\n    let imageFile; // Store the selected file\\n    let successMessage = ''; // Message to show if the product is added successfully\\n    let errorMessage = ''; // Message to show if there is an error\\n    let isLoading = false; // Loading state\\n\\n    // Function to handle adding a new product\\n    async function handleAddProduct() {\\n        successMessage = '';\\n        errorMessage = '';\\n        isLoading = true;\\n        \\n        if (imageFile) {\\n            try {\\n                const imageUrl = await uploadImage(imageFile); // Upload image and get the URL\\n                const product = {\\n                    name,\\n                    id,\\n                    kg,\\n                    price,\\n                    date,\\n                    rating,\\n                    imageUrl // Include image URL\\n                };\\n                await addProduct(product);\\n                successMessage = 'Product added successfully!';\\n                // Clear input fields after adding the product\\n                name = '';\\n                id = '';\\n                price = '';\\n                kg='';\\n                date = '';\\n                rating='';\\n                imageFile = null;\\n            } catch (error) {\\n                console.error(\\"Error adding product:\\", error);\\n                errorMessage = 'Error adding product. Please try again.';\\n            } finally {\\n                isLoading = false;\\n            }\\n        } else {\\n            console.error(\\"Please select an image.\\");\\n            errorMessage = 'Please select an image.';\\n            isLoading = false;\\n        }\\n    }\\n\\n    // Handle file input change\\n    function handleFileChange(event) {\\n        imageFile = event.target.files[0];\\n    }\\n<\/script>\\n\\n<main class=\\"container mx-auto py-10 bg-gradient-to-r from-indigo-500 to-blue-500\\">\\n    <div\\n\\tclass=\\"leading-normal tracking-normal text-white gradient\\"\\n\\tstyle=\\"font-family: 'Source Sans Pro', sans-serif;\\">\\n<Nav/>\\n</div>\\n<button type=\\"button\\" class=\\"text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 \\nfont-medium rounded-lg text-sm px-5 py-2.5 text-center relative top-[100px] left-5\\"\\non:click={() => goto('/pages/Stock')}>{$t(\\"stk\\")}</button>\\n<br/>\\n<br/>\\n<br/>\\n    <h1 class=\\"text-3xl font-bold text-center mb-5 text-white\\">{$t(\\"ads\\")}</h1>\\n    <div class=\\"max-w-md mx-auto bg-white p-6 rounded-lg shadow-md\\">\\n        <input bind:value={name} placeholder=\\"{$t(\\"it\\")}\\" class=\\"border p-2 mb-4 block w-full rounded\\" />\\n        <input bind:value={id} placeholder={$t(\\"iti\\")} class=\\"border p-2 mb-4 block w-full rounded\\" />\\n        <input bind:value={price} placeholder={$t(\\"price\\")} class=\\"border p-2 mb-4 block w-full rounded\\" />\\n        <input bind:value={kg} placeholder=\\"kg\\" class=\\"border p-2 mb-4 block w-full rounded\\" />\\n        <input type=\\"date\\" bind:value={date} class=\\"border p-2 mb-4 block w-full rounded\\" />\\n        <input bind:value={rating} placeholder=\\"ratings\\" class=\\"border p-2 mb-4 block w-full rounded\\" />\\n        <input type=\\"file\\" on:change={handleFileChange} class=\\"border p-2 mb-4 block w-full rounded\\" /> <!-- File input for image upload -->\\n        \\n        <button on:click={handleAddProduct} class=\\"bg-blue-500 text-white p-2 rounded w-full hover:bg-blue-600\\" disabled={isLoading}>\\n            {#if isLoading}\\n                Adding Product...\\n            {:else}\\n                {$t(\\"ad\\")}\\n            {/if}\\n        </button>\\n\\n        <!-- Success and error messages -->\\n        {#if successMessage}\\n            <p class=\\"text-green-500 mt-4 text-center\\">{successMessage}</p>\\n        {/if}\\n        {#if errorMessage}\\n            <p class=\\"text-red-500 mt-4 text-center\\">{errorMessage}</p>\\n        {/if}\\n    </div>\\n    <slot/>\\n</main>\\n\\n<style>input{display:block;margin-bottom:10px}</style>\\n"],"names":[],"mappings":"AAyGO,oBAAK,CAAC,QAAQ,KAAK,CAAC,cAAc,IAAI"}`
};
const Layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $t, $$unsubscribe_t;
  $$unsubscribe_t = subscribe(t, (value) => $t = value);
  let name = "";
  let id = "";
  let price = "";
  let kg = "";
  let date = "";
  let rating = "";
  $$result.css.add(css);
  $$unsubscribe_t();
  return `<main class="container mx-auto py-10 bg-gradient-to-r from-indigo-500 to-blue-500"><div class="leading-normal tracking-normal text-white gradient" style="font-family: 'Source Sans Pro', sans-serif;">${validate_component(Nav, "Nav").$$render($$result, {}, {}, {})}</div> <button type="button" class="text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center relative top-[100px] left-5">${escape($t("stk"))}</button> <br> <br> <br> <h1 class="text-3xl font-bold text-center mb-5 text-white">${escape($t("ads"))}</h1> <div class="max-w-md mx-auto bg-white p-6 rounded-lg shadow-md"><input${add_attribute("placeholder", $t("it"), 0)} class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk"${add_attribute("value", name, 0)}> <input${add_attribute("placeholder", $t("iti"), 0)} class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk"${add_attribute("value", id, 0)}> <input${add_attribute("placeholder", $t("price"), 0)} class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk"${add_attribute("value", price, 0)}> <input placeholder="kg" class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk"${add_attribute("value", kg, 0)}> <input type="date" class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk"${add_attribute("value", date, 0)}> <input placeholder="ratings" class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk"${add_attribute("value", rating, 0)}> <input type="file" class="border p-2 mb-4 block w-full rounded svelte-1xwn7tk">  <button class="bg-blue-500 text-white p-2 rounded w-full hover:bg-blue-600" ${""}>${`${escape($t("ad"))}`}</button>  ${``} ${``}</div> ${slots.default ? slots.default({}) : ``} </main>`;
});
export {
  Layout as default
};
