import { c as create_ssr_component, v as validate_component, d as each, b as add_attribute, e as escape } from "../../../../chunks/ssr.js";
import "../../../../chunks/groq-client.js";
import { N as Nav } from "../../../../chunks/Nav.js";
const css = {
  code: ".file-input.svelte-1e317tc{cursor:pointer;flex:1}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\r\\n  import { groqy } from '$lib/groq-client'; // Assume previous code is in groq-client.js\\r\\n  import Nav from '$lib/component/landing/Nav.svelte';\\r\\n  \\r\\n  let userInput = '';\\r\\n  let messages = [];\\r\\n  let isLoading = false;\\r\\n  let error = null;\\r\\n  let uploadedImage = null; // To store the uploaded image\\r\\n\\r\\n  async function handleSubmit() {\\r\\n    if (!userInput.trim() && !uploadedImage) return; // Ensure either text or image is provided\\r\\n\\r\\n    isLoading = true;\\r\\n    error = null;\\r\\n\\r\\n    try {\\r\\n      // Add user message\\r\\n      if (userInput.trim()) {\\r\\n        messages = [...messages, { type: 'user', content: userInput }];\\r\\n      }\\r\\n\\r\\n      if (uploadedImage) {\\r\\n        messages = [...messages, { type: 'user', content: '[Image uploaded]' }];\\r\\n      }\\r\\n\\r\\n      // Get AI response\\r\\n      const response = await groqy(userInput, uploadedImage);\\r\\n\\r\\n      // Add bot message\\r\\n      messages = [...messages, { type: 'bot', content: response }];\\r\\n    } catch (err) {\\r\\n      error = 'Failed to get response. Please try again.';\\r\\n      console.error(err);\\r\\n    } finally {\\r\\n      isLoading = false;\\r\\n      userInput = '';\\r\\n      uploadedImage = null; // Reset the uploaded image after submission\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function handleImageUpload(event) {\\r\\n    const file = event.target.files[0];\\r\\n    if (file) {\\r\\n      const reader = new FileReader();\\r\\n      reader.onload = () => {\\r\\n        uploadedImage = reader.result; // Store the base64-encoded image\\r\\n      };\\r\\n      reader.readAsDataURL(file);\\r\\n    }\\r\\n  }\\r\\n<\/script>\\r\\n\\r\\n<Nav />\\r\\n<div class=\\"max-w-4xl mx-auto mt-8 p-4 sm:p-6 bg-gray-100 rounded-lg shadow-lg  bg-opacity-10\\">\\r\\n  <h1 class=\\"text-2xl sm:text-3xl font-bold text-center text-white mb-4 sm:mb-6\\">\\r\\n    Appliance Repair Assistant\\r\\n  </h1>\\r\\n\\r\\n  <div class=\\"bg-gray-100 rounded-lg p-3 sm:p-4 h-80 sm:h-96 overflow-y-auto shadow-md mb-4 sm:mb-6 bg-opacity-60\\">\\r\\n    {#each messages as message}\\r\\n      <div class=\\"mb-3 sm:mb-4 flex flex-col\\">\\r\\n        {#if message.type === 'user'}\\r\\n          <div class=\\"bg-blue-500 text-white px-3 sm:px-4 py-2 rounded-lg self-end max-w-[80%] sm:max-w-[70%] shadow-md\\">\\r\\n            <strong>You:</strong>\\r\\n            <p>{message.content}</p>\\r\\n          </div>\\r\\n        {:else}\\r\\n          <div class=\\"bg-gray-200 text-gray-800 px-3 sm:px-4 py-2 rounded-lg self-start max-w-[80%] sm:max-w-[70%] shadow-md\\">\\r\\n            <strong>Assistant:</strong>\\r\\n            <div class=\\"whitespace-pre-wrap\\">\\r\\n              {@html message.content.replace(/\\\\n/g, '<br>')}\\r\\n            </div>\\r\\n          </div>\\r\\n        {/if}\\r\\n      </div>\\r\\n    {/each}\\r\\n\\r\\n    {#if isLoading}\\r\\n      <div class=\\"flex items-center gap-2 text-gray-500\\">\\r\\n        <div class=\\"w-4 h-4 sm:w-5 sm:h-5 border-2 border-gray-300 border-t-blue-500 rounded-full animate-spin\\"></div>\\r\\n        <span class=\\"text-sm sm:text-base\\">Analyzing your appliance issue...</span>\\r\\n      </div>\\r\\n    {/if}\\r\\n\\r\\n    {#if error}\\r\\n      <div class=\\"text-red-600 bg-red-100 p-2 sm:p-3 rounded-lg mt-3 sm:mt-4\\">{error}</div>\\r\\n    {/if}\\r\\n  </div>\\r\\n\\r\\n  <form on:submit|preventDefault={handleSubmit} class=\\"flex flex-col sm:flex-row gap-3 sm:gap-4\\">\\r\\n    <input\\r\\n      type=\\"text\\"\\r\\n      bind:value={userInput}\\r\\n      placeholder=\\"Describe your appliance problem...\\"\\r\\n      class=\\"flex-1 px-3 sm:px-4 py-2 sm:py-3 border border-gray-300 rounded-full text-black shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\\"\\r\\n      disabled={isLoading}\\r\\n    />\\r\\n    <input\\r\\n      type=\\"file\\"\\r\\n      accept=\\"image/*\\"\\r\\n      on:change={handleImageUpload}\\r\\n      class=\\"file-input border border-gray-300 rounded-full px-3 py-2 text-sm text-gray-600 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\\"\\r\\n      disabled={isLoading}\\r\\n    />\\r\\n    <button\\r\\n      type=\\"submit\\"\\r\\n      class=\\"px-4 sm:px-6 py-2 sm:py-3 bg-blue-500 text-white font-semibold rounded-full shadow-md hover:bg-blue-600 transition disabled:bg-gray-300 disabled:cursor-not-allowed\\"\\r\\n      disabled={isLoading}\\r\\n    >\\r\\n      {isLoading ? 'Sending...' : 'Send'}\\r\\n    </button>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n<style>.file-input{cursor:pointer;flex:1}</style>"],"names":[],"mappings":"AAmHO,0BAAW,CAAC,OAAO,OAAO,CAAC,KAAK,CAAC"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let userInput = "";
  let messages = [];
  $$result.css.add(css);
  return `${validate_component(Nav, "Nav").$$render($$result, {}, {}, {})} <div class="max-w-4xl mx-auto mt-8 p-4 sm:p-6 bg-gray-100 rounded-lg shadow-lg bg-opacity-10"><h1 class="text-2xl sm:text-3xl font-bold text-center text-white mb-4 sm:mb-6" data-svelte-h="svelte-1e9zv5h">Appliance Repair Assistant</h1> <div class="bg-gray-100 rounded-lg p-3 sm:p-4 h-80 sm:h-96 overflow-y-auto shadow-md mb-4 sm:mb-6 bg-opacity-60">${each(messages, (message) => {
    return `<div class="mb-3 sm:mb-4 flex flex-col">${message.type === "user" ? `<div class="bg-blue-500 text-white px-3 sm:px-4 py-2 rounded-lg self-end max-w-[80%] sm:max-w-[70%] shadow-md"><strong data-svelte-h="svelte-1lfdmvr">You:</strong> <p>${escape(message.content)}</p> </div>` : `<div class="bg-gray-200 text-gray-800 px-3 sm:px-4 py-2 rounded-lg self-start max-w-[80%] sm:max-w-[70%] shadow-md"><strong data-svelte-h="svelte-1uecytq">Assistant:</strong> <div class="whitespace-pre-wrap"><!-- HTML_TAG_START -->${message.content.replace(/\n/g, "<br>")}<!-- HTML_TAG_END --></div> </div>`} </div>`;
  })} ${``} ${``}</div> <form class="flex flex-col sm:flex-row gap-3 sm:gap-4"><input type="text" placeholder="Describe your appliance problem..." class="flex-1 px-3 sm:px-4 py-2 sm:py-3 border border-gray-300 rounded-full text-black shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500" ${""}${add_attribute("value", userInput, 0)}> <input type="file" accept="image/*" class="file-input border border-gray-300 rounded-full px-3 py-2 text-sm text-gray-600 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 svelte-1e317tc" ${""}> <button type="submit" class="px-4 sm:px-6 py-2 sm:py-3 bg-blue-500 text-white font-semibold rounded-full shadow-md hover:bg-blue-600 transition disabled:bg-gray-300 disabled:cursor-not-allowed" ${""}>${escape("Send")}</button></form> </div>`;
});
export {
  Page as default
};
